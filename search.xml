<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>我和我的婷宝儿</title>
      <link href="/2022/02/25/wo-he-wo-de-ting-bao-er/"/>
      <url>/2022/02/25/wo-he-wo-de-ting-bao-er/</url>
      
        <content type="html"><![CDATA[<h2 id="我和我的婷宝儿"><a href="#我和我的婷宝儿" class="headerlink" title="我和我的婷宝儿"></a>我和我的婷宝儿</h2><p>刚刚你突然就笑了特别好看，我都看呆了，</p><p>我一直想笑给你看，婷婷，我想一直笑给你看</p><p>下午写的有思路么？还行吧、跟个抠血的一样</p><p>是啊，脑袋大，眼睛痛，醉了还以为你跑了呢傻婷婷</p><p>没有跑，偷偷看着你</p><p>这种感觉真好</p><p>你笑的真好看，你比女孩还要好看，贼好看。我怀疑你是不是投错胎了，可能你应该是个女孩儿，哈。这个软件我太喜欢了，还能跟你同步玩儿</p><p>是啊 </p><p>还能偷偷看你，太爽了</p><p>你看着看着会嫌弃的时间久了</p><p>对于我的爱人，看一辈子都嫌短，怎会嫌弃，我还想摸摸你脸呢，可是摸不到，隔着屏幕我想咬一口，哈哈</p><p>我也想摸你啊，婷婷，等我回去，好不好，婷婷</p><p>我也不知道我这是什么状态，可能是魔怔了，</p><p>我也魔怔了，我今天下午写的时候，就一直在想你干啥去了，咋还不发信息</p><p>我想婷婷，我想摸摸婷婷，我想让你感受我的爱</p><p>今天很暖和，本想去给小毛驴洗洗澡的，它太脏了，都是灰层，晚上都看不清楚路，想想还是算了，今天不洗了，我还是偷看你吧，哈哈，看你的时候，空气都是甜的，心情莫名其妙就是特别出奇的好</p><p>反正我是一直等你信息，一直一直。我就是爱你，我感觉写东西都想把你写进去，让你出现在我的每个角落，我后面有感谢，我要写进去</p><p>五点多了，该去吃饭了吧，，肚子饿不饿</p><p>饿了，很饿了，</p><p>去找点吃的吧</p><p>乖，去吧</p><p>嗯啊</p><p>你姑也喊我吃饭了，我得跑快点儿，不然等下又要挨骂了，哭</p><p>好的</p>]]></content>
      
      
      <categories>
          
          <category> 爱情 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 婷宝儿 </tag>
            
            <tag> 爱你 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Proxmox VE折腾记录</title>
      <link href="/2021/12/01/proxmox-ve-zhe-teng-ji-lu/"/>
      <url>/2021/12/01/proxmox-ve-zhe-teng-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="Proxmox-VE-折腾记录"><a href="#Proxmox-VE-折腾记录" class="headerlink" title="Proxmox VE 折腾记录"></a>Proxmox VE 折腾记录</h1><h2 id="Proxmox-VE-安装"><a href="#Proxmox-VE-安装" class="headerlink" title="Proxmox VE 安装"></a>Proxmox VE 安装</h2><h3 id="U盘制作"><a href="#U盘制作" class="headerlink" title="U盘制作"></a>U盘制作</h3><ol><li>下载Proxmox VE官方的安装包<a href="https://pve.proxmox.com/wiki/Downloads">官方下载</a></li></ol><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/proxmox%20ve%20%E4%B8%8B%E8%BD%BD.JPG"></p><ol start="2"><li>下载rufus<a href="http://rufus.ie/zh/">官方下载</a></li><li>插上U盘，打开rufus，按下图指示操作</li></ol><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/rufs%E4%BD%BF%E7%94%A8.png" style="zoom:50%;"><ol start="4"><li>因为Proxmox VE是混合模式，写入一定要使用DD模式写入，如下图（如果使用的是软碟通U盘制作软件，写入模式一定要是RAW模式）</li></ol><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/rufus%E4%BB%A5DD%E6%A8%A1%E5%BC%8F%E5%86%99%E5%85%A5.png" style="zoom:40%;"><blockquote><p>使用软碟通U盘制作步骤如下图</p></blockquote><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/UltraIS%E5%88%B6%E4%BD%9CPVE%E5%AE%89%E8%A3%85U%E7%9B%98.jpg" style="zoom:50%;"><h3 id="安装Proxmox-VE"><a href="#安装Proxmox-VE" class="headerlink" title="安装Proxmox VE"></a>安装Proxmox VE</h3><h2 id="Proxmox-安装Openwrt"><a href="#Proxmox-安装Openwrt" class="headerlink" title="Proxmox 安装Openwrt"></a>Proxmox 安装Openwrt</h2><p>国内清华镜像源官方下载地址<a href="http://mirror.sjtu.edu.cn/openwrt/releases/21.02.1/targets/x86/64/">点击下载</a>，注意千万不要下在snapshot（快照版）因为快照版不含luci，带不开管理界面。要下载release 版本，才能连上管理界面。</p><pre class="line-numbers language-none"><code class="language-none">qm importdisk 100  /var/lib/vz/template/iso/openwrt-21.02.1-x86-64-generic-ext4-combined.img local-lvm//100是虚拟机ID,后面是源文件路径 local-lvem 是img镜像安装在哪个位置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Proxmox-VE改进"><a href="#Proxmox-VE改进" class="headerlink" title="Proxmox VE改进"></a>Proxmox VE改进</h2><h3 id="官方提供无订阅的软件仓库，这是针对7-1的版本"><a href="#官方提供无订阅的软件仓库，这是针对7-1的版本" class="headerlink" title="官方提供无订阅的软件仓库，这是针对7.1的版本"></a>官方提供无订阅的软件仓库，这是针对7.1的版本</h3><ol><li>使用web服务端的shell,输入以下命令打开apt的list</li></ol><pre class="line-numbers language-none"><code class="language-none">nano /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li><p>在文件末尾添加下面代码之后，保存退出</p><pre class="line-numbers language-none"><code class="language-none">deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription #主页这个连接一定要是全部小写，否则错误<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>删除企业版认证之后，保存退出</p></li></ol><pre class="line-numbers language-none"><code class="language-none">nano /etc/apt/sources.list.d/pve-enterprise.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li>执行下面的命令下载密匙</li></ol><pre class="line-numbers language-none"><code class="language-none">wget https://enterprise.proxmox.com/debian/proxmox-release-bullseye.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bullseye.gpg#wget https://mirrors.ustc.edu.cn/proxmox/debian/proxmox-release-bullseye.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bullseye.gpg  #这个是中科大的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol start="5"><li>更新一下源</li></ol><pre class="line-numbers language-none"><code class="language-none">apt update#apt update&amp;&amp;apt dist-upgrade #如需升级pve，则执行该命令,一般不要使用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>其实这些设置可以在web的GUI界面可以设置，登录web，点击如下图所示</p></blockquote><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/PVE_nosubscrip.png" style="zoom:50%;"><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/PVE_nosubscrip2.png" style="zoom:50%;"><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/PVE_nosubcribe3.png" style="zoom:50%;"><h3 id="去掉登录后无订阅提示"><a href="#去掉登录后无订阅提示" class="headerlink" title="去掉登录后无订阅提示"></a>去掉登录后无订阅提示</h3><p>You do not have a valid subscription for this server. Please visit <a href="https://www.proxmox.com/proxmox-ve/pricing">www.proxmox.com</a> to get a list of available options如下图所示</p><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/PVE%E7%99%BB%E5%BD%95%E6%8F%90%E7%A4%BA.png"></p><p>有两种方法</p><ol><li>使用shell文本内搜索修改命令，命令如下，执行以后可以去掉登录提示（注意适用于6.2版本及以上）</li></ol><pre class="line-numbers language-none"><code class="language-none">sed -i.backup -z "s/res === null || res === undefined || \!res || res\n\t\t\t.data.status.toLowerCase() \!== 'active'/false/g" /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js &amp;&amp; systemctl restart pveproxy.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>手动修改</li></ol><blockquote><p>因为这个提示文件==proxmoxlib.js==在/usr/share/javascript/proxmox-widget-toolkit目录下，所以进入这个目录</p></blockquote><pre class="line-numbers language-none"><code class="language-none">cd /usr/share/javascript/proxmox-widget-toolkit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>然后备份proxmoxlib.js文件</p></blockquote><pre class="line-numbers language-none"><code class="language-none">cp proxmoxlib.js proxmoxlib.js.backup<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>通过vi 修改文件</p></blockquote><pre class="line-numbers language-none"><code class="language-none">vi proxmoxlib.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>通过`/toLowerCase‘搜索定位到下面这行代码，</p><pre class="line-numbers language-none"><code class="language-none">    if (res === null || res === undefined || !res || res .data.status.toLowerCase() !== 'active') {<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>把上述代码修改为如下(按i是插入字符，a是添加字符)</p><pre class="line-numbers language-none"><code class="language-none">if(false){...}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>最好按ESC退出编辑模式，输入==:wq!==四个字符，保存文件</p></blockquote><blockquote><p>最好执行下面命令重启proxmox生效</p></blockquote><pre class="line-numbers language-none"><code class="language-none">systemctl restart pveproxy.service<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>之后清除浏览器cookies或者shift+F5(也是刷新)就没有提示了</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git +hexo 搭建个人博客</title>
      <link href="/2021/11/03/git-hexo-da-jian-ge-ren-bo-ke/"/>
      <url>/2021/11/03/git-hexo-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="git-hexo-搭建个人博客"><a href="#git-hexo-搭建个人博客" class="headerlink" title="git +hexo 搭建个人博客"></a>git +hexo 搭建个人博客</h1><p>在设置github域名的时候，在dns解析时主机记录要设置成@（直接解析成xinmin.org)，当访问自己的网站时不然会显示不安全,在github page 的CNAME中设置成xinmin.org 不然显示不安全</p><h1 id="hexo官方文档"><a href="#hexo官方文档" class="headerlink" title="hexo官方文档"></a>hexo官方文档</h1><p><a href="https://hexo.io/zh-cn/docs/">hexo官方文档</a></p><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/Snipaste_2022-02-25_20-25-22.jpg"></p><h2 id="生成ssh-key"><a href="#生成ssh-key" class="headerlink" title="生成ssh key"></a>生成ssh key</h2><p>原文链接：<a href="https://blog.csdn.net/qq_33442844/article/details/78491777">https://blog.csdn.net/qq_33442844/article/details/78491777</a></p><h2 id="Hexo-部署的时候发生错误解决方案"><a href="#Hexo-部署的时候发生错误解决方案" class="headerlink" title="Hexo 部署的时候发生错误解决方案"></a>Hexo 部署的时候发生错误解决方案</h2><p><a href="https://www.jianshu.com/p/9afb3257133b">Hexo 部署的时候发生错误解决方案 </a></p><p><a href="https://blog.csdn.net/u012757419/article/details/105614028">git提示“warning: LF will be replaced by CRLF”的解决办法</a></p><p>注意<code>deploy</code>时可能要你输入<code>username</code>和<code>password</code>。</p><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/githubpages.PNG"></p><h2 id="hexo-网站标题乱码"><a href="#hexo-网站标题乱码" class="headerlink" title="hexo 网站标题乱码"></a>hexo 网站标题乱码</h2><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/%E4%B9%B1%E7%A0%81.PNG"></p><p>这是因为<strong>站点配置文件</strong>没有使用<code>utf-8</code>编码造成的，所以在<strong>站点配置文件</strong><code>_config.yml</code>中写中文网站名，然后把<strong>站点配置文件</strong>保存为<code>utf-8格式</code>。具体做法是：使用notepad++，打开**_config.yml**, —-&gt;编码—》转换为utf-8,然后hexo clean hexo g hexo s即可</p><h2 id="自定义新建页面"><a href="#自定义新建页面" class="headerlink" title="自定义新建页面"></a>自定义新建页面</h2><p>建立“友情链接”，“about me”,”tags”,可以使用以下步骤（先在source下建立contact文件夹，然后在其中建立index.md)也可以直接在source文件夹下建立 contact.md，404.md等）然后输入以下代码即可</p><pre class="line-numbers language-none"><code class="language-none">---title: contactdate: 2018-09-30 17:25:30type: "contact"layout: "contact"---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="新建留言板-contact-页（可选的）"><a href="#新建留言板-contact-页（可选的）" class="headerlink" title="新建留言板 contact 页（可选的）"></a>新建留言板 contact 页（可选的）</h5><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class="line-numbers language-none"><code class="language-none">hexo new page "contact"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class="line-numbers language-none"><code class="language-none">---title: contactdate: 2018-09-30 17:25:30type: "contact"layout: "contact"---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h2 id="把主题更改为中文"><a href="#把主题更改为中文" class="headerlink" title="把主题更改为中文"></a>把主题更改为中文</h2><p>在_config.yaml的language 改成zh_CN</p><p>同时在主题文件中language文件中删除默认语言</p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>从 Hexo5.0 版本开始自带了 <code>prismjs</code> 代码语法高亮的支持，本主题对此进行了改造支持。</p><p>如果你的博客中曾经安装过 <code>hexo-prism-plugin</code> 的插件，那么你须要执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>{</code> 和 <code>}</code> 的转义字符。</p><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p><pre class="line-numbers language-none"><code class="language-none">highlight:  enable: false  line_number: true  auto_detect: false  tab_replace: ''  wrap: true  hljs: falseprismjs:  enable: true  preprocess: true  line_number: true  tab_replace: ''<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主题中默认的 <code>prismjs</code> 主题是 <code>Tomorrow Night</code>，如果你想定制自己的主题，可以前往 <a href="https://prismjs.com/download.html">prismjs 下载页面</a> 定制下载自己喜欢的主题 <code>css</code> 文件，然后将此 css 主题文件取名为 <code>prism.css</code>，替换掉 <code>hexo-theme-matery</code> 主题文件夹中的 <code>source/libs/prism/prism.css</code> 文件即可。</p><p>结果如下</p><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE.png"></p><h2 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> Hexo+Github博客搭建记录<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2019-08-10 21:44:44</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 王新民<span class="token key atrule">img</span><span class="token punctuation">:</span> /medias/banner/7.jpg  //文章特色图<span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /medias/banner/7.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> true  //是否设置为推荐文章<span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">password</span><span class="token punctuation">:</span> 5f15b28ffe43f8be4f239bdd9b69af9d80dbafcb20a5f0df5d1677a120ae9110(必须填使用SHA256加密后的密文，打开文章的时候输入未加密的密密文即可)<span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">tags</span><span class="token punctuation">:</span><span class="token punctuation">-</span> Hexo<span class="token punctuation">-</span> Github<span class="token punctuation">-</span> 博客<span class="token key atrule">categories</span><span class="token punctuation">:</span><span class="token punctuation">-</span> 软件安装与配置<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="layout（布局）"><a href="#layout（布局）" class="headerlink" title="layout（布局）"></a>layout（布局）</h2><p>当你每一次使用代码</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new XXX<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>它其实默认使用的是<code>post</code>这个布局，也就是在<code>source</code>文件夹下的<code>_post</code>里面。</p><p><code>Hexo</code>有三种默认布局：<code>post</code>、<code>page</code>和<code>draft</code>，它们分别对应不同的路径，而您自定义的其他布局和<code>post</code>相同，都将储存到<code>source/_posts</code>文件夹。</p><p>而new这个命令其实是：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>只不过这个<code>layout</code>默认是<code>post</code>罢了。</p><p><strong>1.2.4.2 page</strong></p><p>如果你想另起一页，那么可以使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new page newpage<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>系统会自动给你在<code>source</code>文件夹下创建一个<code>newpage</code>文件夹，以及<code>newpage</code>文件夹中的<code>index.md</code>，这样你访问的<code>newpage</code>对应的链接就是<a href="http://xxx.xxx/newpage">http://xxx.xxx/newpage</a></p><p><strong>draft</strong></p><p><code>draft</code>是草稿的意思，也就是你如果想写文章，又不希望被看到，那么可以</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new draft newdraft<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样会在<code>source/_draft</code>中新建一个<code>newdraft.md</code>文件，如果你的草稿文件写的过程中，想要预览一下，那么可以使用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server --draft<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在本地端口中开启服务预览。</p><p>如果你的草稿文件写完了，想要发表到<code>post</code>中</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo publish draft newdraft<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>就会自动把<code>newdraft.md</code>发送到<code>post</code>中</p><h2 id="个人简历"><a href="#个人简历" class="headerlink" title="个人简历"></a>个人简历</h2><h3 id="音乐居中"><a href="#音乐居中" class="headerlink" title="音乐居中"></a>音乐居中</h3><p>&lt;div align=”middle”&gt;使用网易云音乐外链&lt;/div&gt;</p><h3 id="网页时间设置"><a href="#网页时间设置" class="headerlink" title="网页时间设置"></a>网页时间设置</h3><pre class="line-numbers language-none"><code class="language-none">在var diffDays = Math.floor((diff / days) - diffYears * 365);后添加下面3行var diffHours = Math.floor((diff - (diffYears * 365 + diffDays) * days) / hours);var diffMinutes = Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours) / minutes);var diffSeconds = Math.floor((diff - (diffYears * 365 + diffDays) * days - diffHours * hours - diffMinutes *minutes) / seconds);把显示英文var yearsAndDaysTip ='This site has been running for ' + diffDays + ' days';的换成下面这句话document.getElementById("year").innerHTML = startYear + " - " + todayYear;                            var yearsAndDaysTip = '本站已运行 ' + diffYears + ' 年 ' + diffDays + ' 天 ' + diffHours + ' 时 '+ diffMinutes + ' 分 '+ diffSeconds + '<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="gitalk插件开启"><a href="#gitalk插件开启" class="headerlink" title="gitalk插件开启"></a>gitalk插件开启</h3><p><a href="https://www.jianshu.com/p/4242bb065550?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation">一款超好用的第三方评论插件–Gittalk - 简书 (jianshu.com)</a></p><h3 id="url设置，不能设置为域名，必须设置成为https-username-github-io，不然只能加载文字，不能加载主题"><a href="#url设置，不能设置为域名，必须设置成为https-username-github-io，不然只能加载文字，不能加载主题" class="headerlink" title="url设置，不能设置为域名，必须设置成为https://username.github.io，不然只能加载文字，不能加载主题"></a>url设置，不能设置为域名，必须设置成为<a href="https://username.github.io,不然只能加载文字,不能加载主题/">https://username.github.io，不然只能加载文字，不能加载主题</a></h3><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/image-url.png"></p><h3 id="table标签"><a href="#table标签" class="headerlink" title="table标签"></a>table标签</h3><p>如何多行和一行   &lt;td rowspan=”5”&gt; 文字&lt;/td&gt;</p><p>如何多列合成一行   &lt;td colspan=”5”&gt; 文字&lt;/td&gt;</p><p>colspan，表示合并列。colspan等于几就是合并几个列的单元格。比如：colspan=”2”，就是合并了2个列的单元格。 rowspan，表示合并行。rowspan等于几就是合并几个行的单元格。比如：rowspan=”2”， 就是合并了2个行的单元格</p><h2 id="修改contact页面，字体大小"><a href="#修改contact页面，字体大小" class="headerlink" title="修改contact页面，字体大小"></a>修改contact页面，字体大小</h2><h2 id="使用以下代码添加valine评论模块（在contact页面中添加valine评论模块）"><a href="#使用以下代码添加valine评论模块（在contact页面中添加valine评论模块）" class="headerlink" title="使用以下代码添加valine评论模块（在contact页面中添加valine评论模块）"></a>使用以下代码添加valine评论模块（在contact页面中添加valine评论模块）</h2><pre class="line-numbers language-none"><code class="language-none">&lt;% if (theme.valine &amp;&amp; theme.valine.enable) { %&gt;&lt;%- partial('_partial/valine') %&gt;&lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="修改valine-成中文"><a href="#修改valine-成中文" class="headerlink" title="修改valine 成中文"></a>修改valine 成中文</h3><pre class="line-numbers language-none"><code class="language-none">把lang: '&lt;% if (config.language == "zh-CN") {  %&gt;zh-cn&lt;% } else { %&gt;en&lt;% } %&gt;',修改为下面这就话lang:'&lt;%  {  %&gt;zh-cn&lt;% }  %&gt;',<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="相册"><a href="#相册" class="headerlink" title="相册"></a>相册</h2><p>图片放在gallaries文件夹中，注意路径</p><p>保证index中的title与gallaries中的文件夹名一致，如果想要修改相册名称需要以下几个步骤</p><ol><li><p>修改source /galleries中的相册名，假设命名为相册1</p></li><li><p>再修改source\galleries\相册1下的index中的title名为想要的相册名称</p></li><li><p>修改source/_data中的galleries.json为想要的相册名（因为在laout文件夹下的gallry.ejs中有下面判断</p></li></ol><pre class="line-numbers language-none"><code class="language-none">if (site.data &amp;&amp; site.data.galleries) {    galleries = site.data.galleries;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>所以需要在站点下的source/_data修改galleries.json文件</p><h2 id="重要下面修改背景图"><a href="#重要下面修改背景图" class="headerlink" title="重要下面修改背景图"></a>重要下面修改背景图</h2><pre class="line-numbers language-none"><code class="language-none">&lt;%- partial('_partial/bg-cover') %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h2><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-none"><code class="language-none">githubEmojis:  enable: true  className: github-emoji  inject: true  styles:  customEmojis:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><p>在原主题中添加以上代码后，必须在theme/source/css/文件夹下的my.css添加如下代码才能表情跳跃</p><pre class="line-numbers language-none"><code class="language-none">/* shw2018 洪卫  add 2019.08.10*//* Here is your custom css styles. *//* hexo-filter-github-emojis */.github-emoji{    height: 2em;    width: 2em;    display: inline-block !important;    position: relative;    margin: 0 3px !important;    padding: 0;}.github-emoji:hover{    animation: emoji-face 5s infinite ease-in-out;}@keyframes emoji-face {    2% {        transform: translate(0, 1.5px) rotate(1.5deg);    }    4% {        transform: translate(0, -1.5px) rotate(-0.5deg);    }    6% {        transform: translate(0, 1.5px) rotate(-1.5deg);    }    8% {        transform: translate(0, -1.5px) rotate(-1.5deg);    }    10% {        transform: translate(0, 2.5px) rotate(1.5deg);    }    12% {        transform: translate(0, -0.5px) rotate(1.5deg);    }    14% {        transform: translate(0, -1.5px) rotate(1.5deg);    }    16% {        transform: translate(0, -0.5px) rotate(-1.5deg);    }    18% {        transform: translate(0, 0.5px) rotate(-1.5deg);    }    20% {        transform: translate(0, -1.5px) rotate(2.5deg);    }    22% {        transform: translate(0, 0.5px) rotate(-1.5deg);    }    24% {        transform: translate(0, 1.5px) rotate(1.5deg);    }    26% {        transform: translate(0, 0.5px) rotate(0.5deg);    }    28% {        transform: translate(0, 0.5px) rotate(1.5deg);    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class="line-numbers language-none"><code class="language-none">$('.bg-cover').css('background-image', 'url(/medias/banner/' + new Date().getDay() + '.jpg)');<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h2 id="在固定页面开启樱花特效"><a href="#在固定页面开启樱花特效" class="headerlink" title="在固定页面开启樱花特效"></a>在固定页面开启樱花特效</h2><p>首先在主题的_config.yaml中开启全局的樱花特效，打开主题下的layout/layout.ejs文件，把以下代码修改为下面的代码，</p><pre class="line-numbers language-none"><code class="language-none">&lt;% if (theme.sakura.enable) { %&gt;                &lt;script type="text/javascript"&gt;            // 只在桌面版网页启用特效            var windowWidth = $(window).width();            if (windowWidth &gt; 768) {                document.write('&lt;script type="text/javascript" src="&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.js.sakura) %&gt;"&gt;&lt;\/script&gt;');            }        &lt;/script&gt;    &lt;% } %&gt;                修改成以下代码    &lt;% if (theme.sakura.enable &amp;&amp; page.sakura) { %&gt;  //就是添加一个front-matter的判断                &lt;script type="text/javascript"&gt;            // 只在桌面版网页启用特效            var windowWidth = $(window).width();            if (windowWidth &gt; 768) {                document.write('&lt;script type="text/javascript" src="&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.js.sakura) %&gt;"&gt;&lt;\/script&gt;');            }        &lt;/script&gt;    &lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在想要开启樱花的页面的front-matter 中开启樱花,如下图</p><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/%E6%A8%B1%E8%8A%B1%E7%89%B9%E6%95%88.png"></p><h2 id="判断站点是否开启一个功能使用和判断主题是否开启一个功能"><a href="#判断站点是否开启一个功能使用和判断主题是否开启一个功能" class="headerlink" title="判断站点是否开启一个功能使用和判断主题是否开启一个功能"></a>判断站点是否开启一个功能使用和判断主题是否开启一个功能</h2><p>判断站点的_config.yaml中是否开启一个功能</p><pre class="line-numbers language-none"><code class="language-none">&lt;% if (config.subtitle &amp;&amp; config.subtitle.length &gt; 0) { %&gt;                &lt;%= config.subtitle %&gt;                &lt;% } else { %&gt;                    subtitle                &lt;% } %&gt;   //使用config关键字，在网站_config.yaml中开启(注意不是主题下的_config.yaml，主题下的_config.yaml使用theme关键字)&lt;% if (site.data &amp;&amp; site.data.galleries) { %&gt;        &lt;% var galleries = site.data.galleries; %&gt; //使用site关键字，查看在站点文件中是否有data文件夹（在根目录下新建_data文件夹，并在其中建立galleries.json文件（这个是主题下的layout中的galleries网页<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>判断主题是否开启一个功能</p><pre class="line-numbers language-none"><code class="language-none">&lt;% if (theme.background.enable) { %&gt;   //使用 theme 关键字   &lt;%- partial('_partial/background') %&gt;&lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>判断页面是否开启一个功能</p><pre class="line-numbers language-none"><code class="language-none">&lt;% if (theme.sakura.enable &amp;&amp; page.sakura) { %&gt;  //使用page关键字，同时在页面的front-matter中添加page的成员变量                &lt;script type="text/javascript"&gt;            // 只在桌面版网页启用特效            var windowWidth = $(window).width();            if (windowWidth &gt; 768) {                document.write('&lt;script type="text/javascript" src="&lt;%- theme.jsDelivr.url %&gt;&lt;%- url_for(theme.libs.js.sakura) %&gt;"&gt;&lt;\/script&gt;');            }        &lt;/script&gt;    &lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>判断文章是否开启一个功能的写法</p><pre class="line-numbers language-none"><code class="language-none">&lt;% if (post.tags &amp;&amp; post.tags.length) { %&gt;//使用关键字post,然后的post文章中开启<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="实现雪花，樱花，鼠标星星特效"><a href="#实现雪花，樱花，鼠标星星特效" class="headerlink" title="实现雪花，樱花，鼠标星星特效"></a>实现雪花，樱花，鼠标星星特效</h2><p>首先在主题下的_config.yaml中的开启三种特效</p><p>同时添加snow和star的js链接，添加如下：</p><pre class="line-numbers language-none"><code class="language-none">libs:  css:    matery: /css/matery.css    mycss: /css/my.css    fontAwesome: /libs/awesome/css/all.min.css # V5.15.4    materialize: /libs/materialize/materialize.min.css # 1.0.0    aos: /libs/aos/aos.css    animate: /libs/animate/animate.min.css # V3.5.1    lightgallery: /libs/lightGallery/css/lightgallery.min.css # V1.6.11    aplayer: /libs/aplayer/APlayer.min.css    dplayer: /libs/dplayer/DPlayer.min.css    gitalk: /libs/gitalk/gitalk.css    jqcloud: /libs/jqcloud/jqcloud.css    tocbot: /libs/tocbot/tocbot.css    prism: /libs/prism/prism.css  js:    matery: /js/matery.js    jquery: /libs/jquery/jquery.min.js    materialize: /libs/materialize/materialize.min.js # 1.0.0    masonry: /libs/masonry/masonry.pkgd.min.js # v4.0.0    aos: /libs/aos/aos.js    scrollProgress: /libs/scrollprogress/scrollProgress.min.js    lightgallery: /libs/lightGallery/js/lightgallery-all.min.js # V1.6.11    clicklove: /libs/others/clicklove.js    sakura: /libs/others/sakura.js    # 在下面添加star和snow这两行代码，    star: /libs/others/star.js    snow: /libs/others/snow.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="daovoice-在线聊天工具添加"><a href="#daovoice-在线聊天工具添加" class="headerlink" title="daovoice 在线聊天工具添加"></a>daovoice 在线聊天工具添加</h2><ol><li>打开<a href="http://dashboard.daovoice.io/">daovoice官网</a></li><li>注册一个新号，如下图所示</li></ol><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/daovice.png"></p><p>注册成功以后，会出现让你接入的页面，在第三步有app_id</p><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/daovoice2.png"></p><h2 id="tidio在线聊天工具"><a href="#tidio在线聊天工具" class="headerlink" title="tidio在线聊天工具"></a>tidio在线聊天工具</h2><ol><li>打开<a href="tidio.com">官网</a> 如下图所示</li><li><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/tidio-create.png"></li></ol><p>注意网站填自己的网址</p><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/tidio%E8%87%AA%E5%AE%9A%E4%B9%891.png"></p><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/publickey.JPG">红色方框里就是 public key </p><h2 id="兔小巢"><a href="#兔小巢" class="headerlink" title="兔小巢"></a>兔小巢</h2><p>兔小巢是一个3秒极速接入、即时提醒、专注产品经理角色的用户意见反馈服务平台，该平台前身是<a href="https://baike.baidu.com/item/%E8%85%BE%E8%AE%AF">腾讯</a>公司内部产品用户意见反馈收集的主要工具。为更好的提供一站式用户反馈服务，兔小巢于2016年底正式对外开放 [1-3] </p><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/%E5%85%94%E5%B0%8F%E5%B7%A2.png"></p><ol><li>创建一个产品，如上图</li><li>点击查看，红圆圈里就是 product id</li></ol><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/product-id.png"></p><h2 id="gitment-如何注册设置"><a href="#gitment-如何注册设置" class="headerlink" title="gitment 如何注册设置"></a>gitment 如何注册设置</h2><p><a href="https://www.cnblogs.com/Johnson-lin/p/11386877.html">Gitment评论插件的使用 - Johnson木木 - 博客园 (cnblogs.com)</a></p><p>首先在<a href="https://github.com/settings/applications/new">点击这里</a>注册自己OAuth Application，<br>此处有四个内容：</p><blockquote><p>Application name： 随意填写<br>Homepage URL: 随意填写一个url<br>Application description: 随意填写<br>Authorization callback URL: 填你的博客网址（例: <a href="https://user.github.io/blog/%EF%BC%89%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%9C%89%E5%9F%9F%E5%90%8D%E5%88%99%E5%A1%AB%E5%9F%9F%E5%90%8D%E3%80%82">https://user.github.io/blog/），如果有域名则填域名。</a></p></blockquote><p>注册完后你会得到一个 client ID 和一个 client secret，记住这两个玩意，等会hexo配置会用到</p><h2 id="disqus评论设置"><a href="#disqus评论设置" class="headerlink" title="disqus评论设置"></a>disqus评论设置</h2><p><a href="https://sspai.com/post/64227">Disqus Blog，一个最好用的博客评论平台 - 少数派 (sspai.com)</a></p><h2 id="div-class-适配各种屏幕"><a href="#div-class-适配各种屏幕" class="headerlink" title="div class 适配各种屏幕"></a>div class 适配各种屏幕</h2><pre class="line-numbers language-none"><code class="language-none">&lt;div class="col s6 m4 l4 xl3 gallery-box"&gt;.col-xs- 超小屏幕 手机 (&lt;768px).col-sm- 小屏幕 平板 (≥768px).col-md- 中等屏幕 桌面显示器 (≥992px).col-lg- 大屏幕 大桌面显示器 (≥1200px)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="在主题中如何让页脚贴到屏幕下边，通过使用main标签实现"><a href="#在主题中如何让页脚贴到屏幕下边，通过使用main标签实现" class="headerlink" title="在主题中如何让页脚贴到屏幕下边，通过使用main标签实现"></a>在主题中如何让页脚贴到屏幕下边，通过使用main标签实现</h2><pre class="line-numbers language-none"><code class="language-none">&lt;main class="content"&gt;    &lt;div class="container"&gt;        &lt;% if (site.data &amp;&amp; site.data.galleries) { %&gt;        &lt;% var galleries = site.data.galleries; %&gt;        &lt;div class="gallery-wrapper row"&gt;            &lt;% for (var i = 0, len = galleries.length; i &lt; len; i++) { %&gt;            &lt;% var gallery = galleries[i]; %&gt;            &lt;div class="col s6 m4 l4 xl3 gallery-box"&gt;                &lt;a href="./&lt;%- gallery.name %&gt;" class="gallery-item" data-aos="zoom-in-up"&gt;                     &lt;div class="gallery-cover-box" style="background-image: url(&lt;%- theme.jsDelivr.url %&gt;&lt;%- gallery.cover%&gt;);"&gt;                    &lt;/div&gt;                    &lt;p class="gallery-name"&gt;                        &lt;%- gallery.name %&gt;                    &lt;/p&gt;                &lt;/a&gt;            &lt;/div&gt;            &lt;% } %&gt;        &lt;/div&gt;        &lt;% } %&gt;    &lt;/div&gt;&lt;/main&gt;//下面时添加main标签后的渲染图片<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/%E4%BD%BF%E7%94%A8main%E6%A0%87%E7%AD%BE.png"></p><pre class="line-numbers language-none"><code class="language-none">    &lt;div class="container"&gt;        &lt;% if (site.data &amp;&amp; site.data.galleries) { %&gt;        &lt;% var galleries = site.data.galleries; %&gt;        &lt;div class="gallery-wrapper row"&gt;            &lt;% for (var i = 0, len = galleries.length; i &lt; len; i++) { %&gt;            &lt;% var gallery = galleries[i]; %&gt;            &lt;div class="col s6 m4 l4 xl3 gallery-box"&gt;                &lt;a href="./&lt;%- gallery.name %&gt;" class="gallery-item" data-aos="zoom-in-up"&gt;                     &lt;div class="gallery-cover-box" style="background-image: url(&lt;%- theme.jsDelivr.url %&gt;&lt;%- gallery.cover%&gt;);"&gt;                    &lt;/div&gt;                    &lt;p class="gallery-name"&gt;                        &lt;%- gallery.name %&gt;                    &lt;/p&gt;                &lt;/a&gt;            &lt;/div&gt;            &lt;% } %&gt;        &lt;/div&gt;        &lt;% } %&gt;    &lt;/div&gt;//下边是不添加main标签的渲染图片<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/%E4%B8%8D%E4%BD%BF%E7%94%A8main%E6%A0%87%E7%AD%BE.png"></p><p>所以在相册一种存在页脚切割相册的时候可以加上&lt;main&gt;标签，防止这种情况。</p><p>==其实起作用的就是main标签种的<code>claess="content"</code>==,所以换上&lt;div class=”content”&gt;&lt;/div&gt;  也能防止这种情况，只要有class=”content”这种样式就行。主要是因为下面设置content的css属性。</p><pre class="line-numbers language-none"><code class="language-none">let fixFooterPosition = function () {       $('.content').css('min-height', window.innerHeight - 165);   };<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="添加烟花效果，在layout-ejs中添加如下代码"><a href="#添加烟花效果，在layout-ejs中添加如下代码" class="headerlink" title="添加烟花效果，在layout.ejs中添加如下代码"></a>添加烟花效果，在layout.ejs中添加如下代码</h2><pre class="line-numbers language-none"><code class="language-none">&lt;% if (theme.fireworks.enable &amp;&amp; page.fireworks) { %&gt;             // 只在桌面版网页启用特效            var windowWidth = $(window).width();            if (windowWidth &gt; 768) {&lt;canvas class="fireworks" style="position: fixed; left: 0; top: 0; z-index: 1; pointer-events: none;" &gt;&lt;/canvas&gt; &lt;script type="text/javascript" src="//cdn.bootcss.com/animejs/2.2.0/anime.min.js"&gt;&lt;/script&gt; &lt;script type="text/javascript" src="/js/fireworks.js"&gt;&lt;/script&gt; }&lt;% } %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="被-lt-script-type-”text-javascript”-gt-lt-script-gt-包裹的含义"><a href="#被-lt-script-type-”text-javascript”-gt-lt-script-gt-包裹的含义" class="headerlink" title="被<script type=”text/javascript”></script>包裹的含义"></a>被&lt;script type=”text/javascript”&gt;&lt;/script&gt;包裹的含义</h2><pre class="line-numbers language-none"><code class="language-none">&lt;script type="text/javascript"&gt; var OriginTitile = document.title, st; document.addEventListener("visibilitychange", function () { document.hidden ? (document.title = "看不见我🙈~看不见我🙈~", clearTimeout(st)) : (document.title = "(๑•̀ㅂ•́) ✧被发现了～", st = setTimeout(function () { document.title = OriginTitile }, 3e3)) }) &lt;/script&gt;被&lt;script type="text/javascript"&gt;&lt;/script&gt;包裹，说明其中是javascript代码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="获取页面标题"><a href="#获取页面标题" class="headerlink" title="获取页面标题"></a>获取页面标题</h2><pre class="line-numbers language-none"><code class="language-none">方法一：使用title属性title 属性可返回当前文档的标题（ HTML title 元素中的文本）。语法：document.title示例：使用document.title属性获取HTML文档的标题。&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset="UTF-8"&gt;&lt;title&gt;My title&lt;/title&gt;&lt;/head&gt; &lt;body&gt;HTML文件的标题为：&lt;script type="text/javascript"&gt;document.write(document.title)&lt;/script&gt;&lt;/body&gt; &lt;/html&gt;输出：HTML文件的标题为： My title方法二：使用document.getElementsByTagName()方法getElementsByTagName() 方法可返回带有指定标签名的对象的集合，该方法返回元素的顺序是它们在文档中的顺序。语法：document.getElementsByTagName(tagname)示例：document.getElementsByTagName()方法首先按标签名称选择标题，然后在索引0处获取元素，从而获得文档的标题。&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset="UTF-8"&gt;&lt;title&gt;My title!&lt;/title&gt;&lt;/head&gt; &lt;body&gt;HTML文件的标题为：&lt;script type="text/javascript"&gt;var title = document.getElementsByTagName("title")[0]; document.write(title.innerHTML)&lt;/script&gt;&lt;/body&gt; &lt;/html&gt;输出：HTML文件的标题为： My title!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="添加博客动态标签"><a href="#添加博客动态标签" class="headerlink" title="==添加博客动态标签=="></a>==添加博客动态标签==</h2><p><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/%E6%B7%BB%E5%8A%A0%E5%8D%9A%E5%AE%A2%E5%8A%A8%E6%80%81%E6%A0%87%E7%AD%BE.png"></p><pre class="line-numbers language-none"><code class="language-none">&lt;script type="text/javascript"&gt; var OriginTitile = document.title, st; document.addEventListener("visibilitychange", function () { document.hidden ? (document.title = "看不见我🙈~看不见我🙈~", clearTimeout(st)) : (document.title = "(๑•̀ㅂ•́) ✧被发现了～", st = setTimeout(function () { document.title = OriginTitile }, 3e3)) }) &lt;/script&gt;//把上面的代码放到layout.ejs的&lt;body&gt;&lt;/body&gt;标签内即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>首先被被&lt;script type=”text/javascript”&gt;&lt;/script&gt;包裹，说明其中是javascript代码，通过document.title获取本页面标题，并把标题赋值给OriginTitile，通过document.addEventListener添加一个事件，代码引用如下<br>    document.addEventListener（”事件名（自己定义），函数，使用捕获”<br>所以visibilitychange是事件名字，函数就是要执行的功能。<br>    通过document.hidden属性,可判断页面是否可见。 st只是自定义的变量（用来设置标题显示时间）如果不可见，则document.hidden为true. 如果可见， 则为false。<br>但是， 如果该页面只是被其它窗口挡住， 而非最小化该页面。 则document.hidden仍然是false. 而不是不可见。<br>所以当通过document.hidden判断标题是否可见，通过三元运算符执行相应的结果，如果为真（不可见），执行document.title = “看不见我🙈<del>看不见我🙈</del>“, clearTimeout(st))，这句含义是设置标题，并清除st(标题显示时间)<br>如果可见，执行(document.title = “(๑•̀ㅂ•́) ✧被发现了～”, st = setTimeout(function () { document.title = OriginTitile }, 3e3)，这就话是把标题设置为”(๑•̀ㅂ•́) ✧被发现了～，并设置显示时间为3e3(3秒钟),3秒后显示原标题</p><pre class="line-numbers language-none"><code class="language-none">setTimeout(code,millisec)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">code</td><td align="left">必需。要调用的函数后要执行的 JavaScript 代码串。</td></tr><tr><td align="left">millisec</td><td align="left">必需。在执行代码前需等待的毫秒数。</td></tr></tbody></table></blockquote><h2 id="添加博客天气插件"><a href="#添加博客天气插件" class="headerlink" title="添加博客天气插件"></a>添加博客天气插件</h2><hr><p>在搜寻插件的过程中无意间用 google 搜到的一个网站，使用非常简单，在这里附上插件添加的方法</p><p>中国天气网：<a href="https://cj.weather.com.cn/plugin/pc">https://cj.weather.com.cn/plugin/pc</a></p><p>选择自定义插件—&gt;自定义样式——&gt;生成代码，然后会生成这样一段代码</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- Weather Widget --&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"> <span class="token constant">WIDGET</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token constant">FID</span><span class="token operator">:</span> <span class="token string">'your FID'</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://apip.weatherdt.com/float/static/js/r.js?v=1111<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Html</p><p>在 /themes/matery/source/layout/_widget 新建文件 weather.ejs，把上面生成的代码添加进入,可以设置只有桌面端显示,如下修改:</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 天气接口  洪卫 shw2018 add 2019.09.09 --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">  <span class="token constant">WIDGET</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token constant">FID</span><span class="token operator">:</span> <span class="token string">'1tFpFZ5Mtj'</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token comment">&lt;!-- &lt;script type="text/javascript" src="https://apip.weatherdt.com/float/static/js/r.js?v=1111"&gt;&lt;/script&gt; --&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">  <span class="token comment">//只在桌面版网页启用特效</span>  <span class="token keyword">var</span> windowWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>windowWidth <span class="token operator">&gt;</span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;script type="text/javascript" src="https://apip.weatherdt.com/float/static/js/r.js?v=1111"&gt;&lt;\/script&gt;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Html</p><p>然后在 /themes/matery/layout/_partial/layout.ejs 中添加如下代码：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 天气接口控件  洪卫 shw2018 add <span class="token number">2019.09</span><span class="token number">.09</span> <span class="token operator">--</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>weather<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">&gt;</span>  <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_widget/weather'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Js</p><p>在主题配置文件 .yml中配置:</p><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"><span class="token comment"># 天气接口插件</span><span class="token key atrule">weather</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Yml</p><p>展示效果可以参考我的<a href="https://sunhwee.com/">主页</a></p><p><strong>当然,如果你不想搞这么复杂,可以直接将下面代码插入 /themes/matery/layout/_partial/layout.ejs 中即可使用:</strong></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">    <span class="token constant">WIDGET</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token constant">FID</span><span class="token operator">:</span> <span class="token string">'1tFpFZ5Mtj'</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://apip.weatherdt.com/float/static/js/r.js?v=1111<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="lt-div-class-”col-xs-6-col-sm-3”-gt-lt-div-gt-含义"><a href="#lt-div-class-”col-xs-6-col-sm-3”-gt-lt-div-gt-含义" class="headerlink" title="<div class=”col-xs-6 col-sm-3”></div>含义"></a>&lt;div class=”col-xs-6 col-sm-3”&gt;&lt;/div&gt;含义</h2><blockquote><p>.col-xs- 超小屏幕 手机 (&lt;768px)<br>.col-sm- 小屏幕 平板 (≥768px)<br>.col-md- 中等屏幕 桌面显示器 (≥992px)<br>.col-lg- 大屏幕 大桌面显示器 (≥1200px)</p></blockquote><h2 id="ejs中的代码被-lt-gt-包裹被解释成js代码"><a href="#ejs中的代码被-lt-gt-包裹被解释成js代码" class="headerlink" title="ejs中的代码被<% %>包裹被解释成js代码"></a>ejs中的代码被&lt;% %&gt;包裹被解释成js代码</h2><pre class="line-numbers language-none"><code class="language-none">&lt;%- countseeing %&gt;表示输出countseeing的值<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="js中如何实现数字相加"><a href="#js中如何实现数字相加" class="headerlink" title="js中如何实现数字相加"></a>js中如何实现数字相加</h3><p>var a = 1,<br>var b = 2,<br>var c = a + b<br>这样c得出来的解果是12，</p><p>使用Number()函数可以解决这个问题，如下<br>var c = Number(a) + Number(b)<br>这样c得出来的解果是3，</p><p>JavaScript Number() 函数对象的值转换为数字。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">var</span> test1<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Boolean</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> test2<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Boolean</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> test3<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> test4<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"999"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> test5<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"999 888"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>test1<span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">"&lt;br /&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>test2<span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">"&lt;br /&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>test3<span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">"&lt;br /&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>test4<span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">"&lt;br /&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>test5<span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">"&lt;br /&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>输出：101256657776588999NaN<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>写的有点乱，欢迎评论,欢迎打赏<span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p> <table>        <tbody><tr>            <td width="20%"><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/%E5%BE%AE%E4%BF%A1.jpg" style="zoom:50%;"></td>            <td width="20%"><img src="https://raw.githubusercontent.com/xinminwang/picture-host/main/image/%E6%94%AF%E4%BB%98%E5%AE%9D.jpg" style="zoom:50%;"></td>        </tr>    </tbody></table><p>​    </p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Matery </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
